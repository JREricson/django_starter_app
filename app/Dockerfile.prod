
## Builder stage
################

FROM python:3.11.0-slim-bullseye as builder

WORKDIR /usr/src/app
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1




# RUN pip install --upgrade pip
RUN pip install --upgrade pip
RUN pip install flake8==3.9.2

COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


COPY . .
# W503 is line break after newline error

# checking complience with pep8
# RUN flake8 --ignore=E501,F401,W503 .

## final stage
################

FROM python:3.11.0-slim-bullseye
RUN mkdir -p /home/app
RUN useradd -ms /bin/bash app
# todo - replace all with apt-cache and test
# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/app
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
RUN mkdir -p $APP_HOME/backup/db
WORKDIR $APP_HOME

RUN apt update && apt -y install postgresql-13 postgresql-client-13
# RUN apt-get update && apt-get install postgresql-13 postgresql-client-13
# install dependencies
RUN apt-get update -y && apt-get upgrade -y
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*


# copy project
COPY . $APP_HOME



RUN chmod +x /home/app/app/entrypoint.prod.sh
RUN sed -i 's/\r$//g' /home/app/app/entrypoint.prod.sh

ENTRYPOINT ["/home/app/app/entrypoint.prod.sh"]

